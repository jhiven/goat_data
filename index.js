const axios = require("axios").default;
const fs = require("fs").promises;

const areaIdList = ["3608225175", "3608225259"];

function getQuery(id) {
  const query = `/*
This has been generated by the overpass-turbo wizard.
The original search was:
“((building=* or amenity=* or shop=* or office=* or place=* or public_transport=*) and name is not null and (type:node or type:way)) in Surabaya”
*/
[out:json][timeout:25]; // fetch area “Surabaya” to search in
area(id:${id})->.searchArea;
// gather results
(
  node["building"]["name"](area.searchArea);
  way["building"]["name"](area.searchArea);
  node["amenity"]["name"](area.searchArea);
  way["amenity"]["name"](area.searchArea);
  node["shop"]["name"](area.searchArea);
  way["shop"]["name"](area.searchArea);
  node["office"]["name"](area.searchArea);
  way["office"]["name"](area.searchArea);
  node["place"]["name"](area.searchArea);
  way["place"]["name"](area.searchArea);
  node["public_transport"]["name"](area.searchArea);
  way["public_transport"]["name"](area.searchArea);
);
// print results
out center;`;

  return query;
}

async function getPlace() {
  try {
    const json = [];
    console.log("Fetching overpass api data");

    for (const id of areaIdList) {
      const { data } = await axios.post(
        "https://overpass-api.de/api/interpreter",
        {
          data: getQuery(id),
        },
        {
          headers: {
            "Content-Type": "application/x-www-form-urlencoded",
          },
        },
      );
      json.push(...data["elements"]);
      console.log(json);
    }

    await fs.writeFile(
      "result.json",
      JSON.stringify(json, null, 2),
      (error) => {
        if (error) {
          console.error(error);
        }
      },
    );
    console.log("Data has been written to result.json");
  } catch (error) {
    console.error("Error fetching data from Overpass API:", error);
  }
}

getPlace();
